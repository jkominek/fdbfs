#!/usr/bin/env python

import values_pb2 as msgs
import struct

prefix = "FS"

print "writemode on"
print "begin"
print "clearrange {} {}\\xFF".format(prefix, prefix)

def inode_key(i):
    return prefix + struct.pack(">cQ", "i", i)
def dirent_key(i, n):
    return prefix + struct.pack(">cQc", "i", i, "d") + n
def block_key(i, b):
    return prefix + struct.pack(">cQcQ", "i", i, "f", b)
def printable(s):
    return "".join([c if c.isalnum() else ("\\x%02x" % (ord(c),)) for c in s])
def print_set(k, v):
    print "set {} {}".format(printable(k), printable(v))

rootdir_inode = 1
rootdir_inode_value = map(chr, [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x1f, 0xf9, 0xd3, 0xfd, 0x7f, 0x00, 0x00, 0x4e, 0x1f, 0xf9, 0xd3, 0xfd, 0x7f, 0x00, 0x00, 0xe5, 0x6f, 0x41, 0x9e, 0xfe, 0x7e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xc8, 0x2b, 0x71, 0x95, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc7, 0x2b, 0x71, 0x95, 0x55, 0x00, 0x00, 0xd0, 0xc5, 0x2b, 0x71, 0x95, 0x55, 0x00, 0x00])
print_set(inode_key(rootdir_inode), rootdir_inode_value)

hello_inode = 42
hello_inode_value = map(chr, [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0xd9, 0xe7, 0x51, 0xfd, 0x7f, 0x00, 0x00, 0xae, 0xd9, 0xe7, 0x51, 0xfd, 0x7f, 0x00, 0x00, 0xe5, 0x7f, 0xd5, 0x4d, 0xd2, 0x7f, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x28, 0xb7, 0x75, 0x50, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x28, 0xb7, 0x75, 0x50, 0x56, 0x00, 0x00, 0xd0, 0x25, 0xb7, 0x75, 0x50, 0x56, 0x00, 0x00])
hello_dirent = msgs.DirectoryEntry()
hello_dirent.inode = hello_inode
hello_dirent.type = msgs.regular
print_set(dirent_key(rootdir_inode, "hello"), hello_dirent.SerializeToString())
print_set(inode_key(hello_inode), hello_inode_value)
print_set(block_key(hello_inode, 0), "hello world")

world_inode = 666
world_inode_value = map(chr, [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdf, 0xb2, 0x70, 0x8a, 0xff, 0x7f, 0x00, 0x00, 0xde, 0xb2, 0x70, 0x8a, 0xff, 0x7f, 0x00, 0x00, 0xe5, 0x6f, 0xb0, 0xf4, 0x70, 0x7f, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0xc8, 0x30, 0xd0, 0x14, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xc8, 0x30, 0xd0, 0x14, 0x56, 0x00, 0x00, 0xd0, 0xc5, 0x30, 0xd0, 0x14, 0x56, 0x00, 0x00])
world_dirent = msgs.DirectoryEntry()
world_dirent.inode = world_inode
world_dirent.type = msgs.regular
print_set(dirent_key(rootdir_inode, "world"), world_dirent.SerializeToString())
print_set(inode_key(world_inode), world_inode_value)
print_set(block_key(world_inode, 0), "hello world!!!")

print "commit"
